<UserControl x:Class="MiniSim.Creator.Views.CanvasView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MiniSim.Creator.Views"
              xmlns:cal="http://www.caliburnproject.org"
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"  
             >

   
    

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MiniSim.Creator;component/Resources/FlowsheetIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolToVis"/>
            <VisualBrush  x:Key="GridBrush" 
                          TileMode="Tile" Viewport="0,0,20,20" 
                          ViewportUnits="Absolute" Viewbox="0,0,20,20"    
                          ViewboxUnits="Absolute" >
                <VisualBrush.Visual>
                    <Grid Background="White">
                        <Rectangle Margin="18,18,0,0" Fill="LightGray" Width="2" Height="2" />
                    </Grid>
                </VisualBrush.Visual>
            </VisualBrush>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="theGrid" Tag="{Binding DataContext}"  Focusable="True"  cal:Message.Attach=
              "[Event MouseLeftButtonDown] = [Action MouseDownOnGrid($source, $eventArgs)];
               [Event PreviewMouseLeftButtonUp] = [Action MouseUpOnGrid($source, $eventArgs)];
               [Event MouseMove] = [Action MouseMoveOnGrid($source, $eventArgs)] ;                      
               [Key Up] = [ShiftSelectedUnitsUp]; 
               [Gesture Ctrl+A] = [Action SelectAll()]"
          >
        <Grid.Style>
            <Style  TargetType="{x:Type Grid}">
                <Setter Property="Background"  Value="White"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ShowGrid}" Value="true" >
                        <Setter Property="Background"  Value="{StaticResource GridBrush}">
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid.ContextMenu>
            <ContextMenu cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" cal:Message.Attach="[Event Opened]=[Action ContextMenuOpening($source,$eventArgs)]">
                <MenuItem Header="Rebuild"  ToolTip="Rebuild flowsheet model and connections" cal:Message.Attach="Rebuild($executionContext)"></MenuItem>
                <MenuItem Header="Initialize" ToolTip="Perform local initialization routine on each unit" cal:Message.Attach="Initialize($executionContext)"></MenuItem>
                <MenuItem Header="Solve" ToolTip="Solve the equation system" cal:Message.Attach="Solve($executionContext)"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Source" Name="AddSource" cal:Message.Attach="AddItem($source,$eventArgs)"></MenuItem>
                <MenuItem Header="Sink"  Name="AddSink" cal:Message.Attach="AddItem($source,$eventArgs)"></MenuItem>
                <MenuItem Header="Mixer"  Name="AddMixer" cal:Message.Attach="AddItem($source,$eventArgs)"></MenuItem>
                <MenuItem Header="Splitter"  Name="AddSplitter" cal:Message.Attach="AddItem($source,$eventArgs)"></MenuItem>
                <MenuItem Header="Heater"  Name="AddHeater" cal:Message.Attach="AddItem($source,$eventArgs)"></MenuItem>
                <MenuItem Header="Flash"  Name="AddFlash" cal:Message.Attach="AddItem($source,$eventArgs)"></MenuItem>
                <MenuItem Header="Column"  Name="AddColumn" cal:Message.Attach="AddItem($source,$eventArgs)"></MenuItem>
                <MenuItem Header="Rectification"  Name="AddRectification" cal:Message.Attach="AddItem($source,$eventArgs)"></MenuItem>
                <Separator>
                    
                </Separator>
                <MenuItem Header="Format">
                    <MenuItem Header="Show Grid" IsCheckable="True" IsChecked="{Binding ShowGrid}"></MenuItem>
                    <MenuItem Header="Snap to Grid" IsCheckable="True" IsChecked="{Binding SnapGrid}"></MenuItem>
                    <MenuItem Header="Temperature" IsCheckable="True" IsChecked="{Binding ShowTemperature}"></MenuItem>
                    <MenuItem Header="Pressure" IsCheckable="True" IsChecked="{Binding ShowPressure}"></MenuItem>
                    <MenuItem Header="Vapor Fraction" IsCheckable="True" IsChecked="{Binding ShowVapourFraction}"></MenuItem>
                    <MenuItem Header="Mass Flow" IsCheckable="True" IsChecked="{Binding ShowMassflow}"></MenuItem>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
        <ItemsControl Name="connectionCanvas" ItemsSource="{Binding Path=Connections}" >

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas ></Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Canvas>
                        <Polyline Stroke="White" StrokeThickness="10" Points="{Binding Path.Points}" StrokeEndLineCap="Triangle" StrokeStartLineCap="Round"></Polyline>
                        <Polyline Name="streamLine" Stroke="{Binding Color}" StrokeThickness="{Binding Thickness}" StrokeDashArray="{Binding DashArray}" Points="{Binding Path.Points}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" cal:Action.TargetWithoutContext="{Binding ElementName=theGrid, Path=DataContext}" cal:Message.Attach="[Event MouseLeftButtonDown] = [Action SelectStream($dataContext,$eventArgs)]"></Polyline>
                        <StackPanel  Canvas.Top="{Binding LabelPoint.Y}" Canvas.Left="{Binding LabelPoint.X}"  ToolTipService.ShowDuration="60000" >
                            <Border Name="labelBorder"  Background="White" BorderBrush="DimGray" HorizontalAlignment="Left"  BorderThickness="2" CornerRadius="5"  MinWidth="40" MinHeight="20"   cal:Action.TargetWithoutContext="{Binding ElementName=theGrid, Path=DataContext}" cal:Message.Attach="[Event MouseLeftButtonDown] = [Action SelectStream($dataContext,$eventArgs)]"  >
                                <Grid>
                                    <TextBlock Name="textBlockName" Margin="5,0,5,0" Text="{Binding Name}" HorizontalAlignment="Center" ></TextBlock>
                                    <TextBox Name="textBoxName" Margin="5,0,5,0" Text="{Binding Name}" HorizontalAlignment="Center" Visibility="Collapsed"></TextBox>
                                </Grid>

                                <Border.ToolTip>
                                    <ToolTip>
                                        <TextBlock FontFamily="Consolas" Text="{Binding Report}"></TextBlock>
                                    </ToolTip>
                                </Border.ToolTip>                                
                            </Border>
                            <StackPanel Name="Temperature"  Orientation="Horizontal" Margin="3,0,3,0" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.ShowTemperature, Converter={StaticResource BoolToVis}}" >
                                <TextBlock Text="{Binding Temperature.DisplayValue, StringFormat=G4}" HorizontalAlignment="Center" ></TextBlock>
                                <TextBlock Text="{Binding Temperature.DisplayUnit.Symbol}" Margin="3,0,0,0"  HorizontalAlignment="Center" ></TextBlock>
                            </StackPanel>
                            <StackPanel Name="Pressure"  Orientation="Horizontal" Margin="3,0,3,0" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.ShowPressure, Converter={StaticResource BoolToVis}}">
                                <TextBlock Text="{Binding Pressure.DisplayValue, StringFormat=G4}" HorizontalAlignment="Center" ></TextBlock>
                                <TextBlock Text="{Binding Pressure.DisplayUnit.Symbol}"  Margin="3,0,0,0" HorizontalAlignment="Center" ></TextBlock>
                            </StackPanel>
                            <StackPanel Name="MassFlow"  Orientation="Horizontal" Margin="3,0,3,0" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.ShowMassflow, Converter={StaticResource BoolToVis}}">
                                <TextBlock Text="{Binding Massflow.DisplayValue, StringFormat=G4}" HorizontalAlignment="Center" ></TextBlock>
                                <TextBlock Text="{Binding Massflow.DisplayUnit.Symbol}" Margin="3,0,0,0" HorizontalAlignment="Center" ></TextBlock>
                            </StackPanel>
                            <StackPanel Name="VapourFraction"  Orientation="Horizontal" Margin="3,0,3,0" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.ShowVapourFraction, Converter={StaticResource BoolToVis}}">
                                <TextBlock Text="{Binding VapourFraction.DisplayValue, StringFormat=G4}" HorizontalAlignment="Center" ></TextBlock>
                                <TextBlock Text="{Binding VapourFraction.DisplayUnit.Symbol}" Margin="3,0,0,0" HorizontalAlignment="Center" ></TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </Canvas>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="true">
                            <Setter TargetName="textBoxName" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="textBlockName" Property="Visibility" Value="Collapsed"></Setter>
                            <Setter TargetName="streamLine" Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect Opacity="0.8" BlurRadius="15"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <Trigger SourceName="labelBorder" Property="IsMouseOver" Value="True">
                            <Setter TargetName="streamLine" Property="Stroke" Value="Black"></Setter>
                        </Trigger>
                        <Trigger SourceName="streamLine" Property="IsMouseOver" Value="True">
                            <Setter TargetName="streamLine" Property="Stroke" Value="Black"></Setter>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>

            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <ItemsControl Name="NodeCanvas" ItemsSource="{Binding Items}"  >
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Name="itemPanel" cal:Action.TargetWithoutContext="{Binding ElementName=theGrid, Path=DataContext}"  cal:Message.Attach="[Event MouseLeftButtonDown] = [Action SelectItem($dataContext,$eventArgs)]" >
                        <StackPanel   >
                            <Grid >
                                <ContentControl Content="{Binding }" HorizontalAlignment="Left"  Name="nodeIcon" >
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Setter Property="ContentTemplate" Value="{DynamicResource BlockTemplate}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DisplayIcon}" Value="ColumnSection">
                                                    <Setter Property="ContentTemplate" Value="{DynamicResource ColumnSectionTemplate}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Stream">
                                                    <Setter Property="ContentTemplate" Value="{DynamicResource StreamTemplate}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DisplayIcon}" Value="TwoPhaseFlash">
                                                    <Setter Property="ContentTemplate" Value="{DynamicResource TwoPhaseFlashTemplate}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Mixer">
                                                    <Setter Property="ContentTemplate" Value="{DynamicResource MixerTemplate}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Splitter">
                                                    <Setter Property="ContentTemplate" Value="{DynamicResource SplitterTemplate}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Heater">
                                                    <Setter Property="ContentTemplate" Value="{DynamicResource HeaterTemplate}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>

                                <ItemsControl Name="connectorLayer"  ItemsSource="{Binding Connectors}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <ContentControl Tag="{Binding DataContext, ElementName=theGrid}" Content="{Binding }" Name="connectorIcon" ContentTemplate="{DynamicResource BoxConnector}" cal:Action.TargetWithoutContext="{Binding ElementName=theGrid, Path=DataContext}"  cal:Message.Attach="[Event MouseLeftButtonDown] = [Action SelectConnector($dataContext)]" >
                                                <ContentControl.ContextMenu>
                                                    <ContextMenu cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" cal:Message.Attach="[Event Opened]=[Action ContextMenuOpening($source,$eventArgs)]">
                                                        <MenuItem Header="Source" Name="AddSource"   cal:Message.Attach="AddItem($source, $dataContext)"></MenuItem>
                                                        <MenuItem Header="Sink"  Name="AddSink"  cal:Message.Attach="AddItem($source, $dataContext)"></MenuItem>
                                                        <MenuItem Header="Mixer"  Name="AddMixer"   cal:Message.Attach="AddItem($source, $dataContext)"></MenuItem>
                                                        <MenuItem Header="Splitter"  Name="AddSplitter"  cal:Message.Attach="AddItem($source, $dataContext)"></MenuItem>
                                                        <MenuItem Header="Heater"  Name="AddHeater" cal:Message.Attach="AddItem($source,$dataContext)"></MenuItem>
                                                        <MenuItem Header="Flash"  Name="AddFlash"  cal:Message.Attach="AddItem($source, $dataContext)"></MenuItem>
                                                        <MenuItem Header="Column"  Name="AddColumn"  cal:Message.Attach="AddItem($source, $dataContext)"></MenuItem>
                                                        <MenuItem Header="Rectification"  Name="AddRectification" cal:Message.Attach="AddItem($source,$dataContext)"></MenuItem>
                                                    </ContextMenu>
                                                </ContentControl.ContextMenu>
                                            </ContentControl>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>

                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas></Canvas>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Canvas.Left" Value="{Binding X}"/>
                                            <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>

                                </ItemsControl>

                                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                                    <Border  Width="16" Height="16" CornerRadius="8" Name ="RequiresRebuildIcon" Background="Tomato"  ToolTip="Structural parameters of this unit changed and it requires rebuilding">
                                        <materialDesign:PackIcon  Kind="Wrench"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                    </Border>
                                    <Border  Width="16" Height="16"  CornerRadius="8" Name ="RequiresInitIcon" Background="LightBlue" ToolTip="Unit is not initialized yet">
                                        <materialDesign:PackIcon Kind="CommentQuestionOutline" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"   />
                                    </Border>                                  
                                    <Border  Width="16" Height="16" CornerRadius="8" Name ="RequiresRecalculationIcon" Background="Gold" ToolTip="Parameters have changed and the Model needs to be recalculated">
                                        <materialDesign:PackIcon  Kind="Calculator"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"   />
                                    </Border>
                                    <Border  Width="16" Height="16" CornerRadius="8" Name ="IsDeactivatedIcon" Background="Gainsboro" ToolTip="Model is deactivated">
                                        <materialDesign:PackIcon Kind="BlockHelper"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"   />
                                    </Border>
                                </StackPanel>
                                
                            </Grid>
                            <TextBlock Margin ="0,5,0,0" Name="textBlockName" HorizontalAlignment="Center" Text="{Binding Name}" FontSize="14" FontFamily="Calibri" Foreground="Black" ></TextBlock>
                            <TextBox Margin ="0,5,0,0"  Name="textBoxName" HorizontalAlignment="Center"  Text="{Binding Name}" FontSize="14" FontFamily="Calibri" ></TextBox>

                            <StackPanel.ToolTip>
                                <ToolTip>
                                    <TextBlock FontFamily="Consolas" Text="{Binding Report}"></TextBlock>
                                </ToolTip>
                            </StackPanel.ToolTip>
                        </StackPanel>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="true">

                            <Setter TargetName="textBoxName" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="textBlockName" Property="Visibility" Value="Collapsed"></Setter>
                            <Setter TargetName="nodeIcon" Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect Opacity="0.8" BlurRadius="15"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>

                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="false">
                            <Setter TargetName="textBoxName" Property="Visibility" Value="Collapsed"></Setter>
                            <Setter TargetName="textBlockName" Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsLabelVisible}" Value="false">
                            <Setter TargetName="textBoxName" Property="Visibility" Value="Collapsed"></Setter>
                            <Setter TargetName="textBlockName" Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DisplayIcon}" Value="Text">
                            <Setter TargetName="textBoxName" Property="Visibility" Value="Collapsed"></Setter>
                            <Setter TargetName="textBlockName" Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive}" Value="false">
                            <Setter TargetName="IsDeactivatedIcon" Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive}" Value="true">
                            <Setter TargetName="IsDeactivatedIcon" Property="Visibility" Value="Hidden"></Setter>
                            <Setter TargetName="IsDeactivatedIcon" Property="Width" Value="0"></Setter>
                        </DataTrigger>


                        <DataTrigger Binding="{Binding RequiresRebuild}" Value="true">
                            <Setter TargetName="RequiresRebuildIcon" Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RequiresRebuild}" Value="false">
                            <Setter TargetName="RequiresRebuildIcon" Property="Visibility" Value="Hidden"></Setter>
                            <Setter TargetName="RequiresRebuildIcon" Property="Width" Value="0"></Setter>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding RequiresInitialization}" Value="true">
                            <Setter TargetName="RequiresInitIcon" Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RequiresInitialization}" Value="false">
                            <Setter TargetName="RequiresInitIcon" Property="Visibility" Value="Hidden"></Setter>
                            <Setter TargetName="RequiresInitIcon" Property="Width" Value="0"></Setter>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding RequiresRecalculation}" Value="true">
                            <Setter TargetName="RequiresRecalculationIcon" Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RequiresRecalculation}" Value="false">
                            <Setter TargetName="RequiresRecalculationIcon" Property="Visibility" Value="Hidden"></Setter>
                            <Setter TargetName="RequiresRecalculationIcon" Property="Width" Value="0"></Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding X}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas AllowDrop="True" ></Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

        </ItemsControl>

        <Border HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10" CornerRadius="10" Background="White" BorderBrush="LightGray" BorderThickness="1">
            <TextBox VerticalAlignment="Top" Background="White" x:Name="FlowsheetName" MinWidth="100" Margin="20,5,20,5" FontSize="14"></TextBox>
        </Border>
        <!--<StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Left"  Margin="10">
            <TextBlock  Text="{Binding MousePosition}"></TextBlock>
            <TextBlock  Text="{Binding SelectedConnector}"></TextBlock>
            <TextBlock   Text="{Binding IsDragging}"></TextBlock>
            <TextBlock   Text="{Binding SelectedUnit}"></TextBlock>
        </StackPanel>-->
    </Grid>
</UserControl>
